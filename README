Albert is an interactive program to assist the specialist in the study of nonassociative algebra. The program was first designed and implemented at Clemson University about 1990 by D. Jacobs and S.V. Muddana, with assistance from A.J. Offutt, under an NSF grant. Enhancements have been made by K. Prabhu, D. Lee, and T. Whiteley. K.A. Vander Velden improved memory usage and enhanced performance. The main problem addressed by Albert is the recognition of polynomial identities in varieties of nonassociative algebras. 


This repository is an update to the Albert package

	-rw-rw-r--. 1 kent kent 184634 Sep  5  2008 alberttar.gz

retrieved from

	http://people.cs.clemson.edu/~dpj/albertstuff/albert.html
	http://people.cs.clemson.edu/~dpj/albertstuff/obtaining.html

on Feb. 2, 2014


For best performance, it is recommended that Albert be compiled in two stages. The first stage collects execution statistics that GCC can use in the second stage. To do this, edit the Makefile to enable the following options, compile, and perform an example of your typical work in Albert.

	CFLAGS=-g -O3 -Wall -fopenmp -fprofile-generate -fprofile-correction
	LDFLAGS=-fopenmp -fprofile-generate -fprofile-correction

After a few minutes of having Albert calculate, enable the following Makefile flags, execute 'make clean', and rebuild Albert.

	CFLAGS=-g -O3 -Wall -fopenmp -fprofile-use -fprofile-correction
	LDFLAGS=-fopenmp -fprofile-use -fprofile-correction

